<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
						   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
						   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<!--<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">-->
		<!--<property name="poolProperties">-->
			<!--<bean class="org.apache.tomcat.jdbc.pool.PoolProperties">-->
				<!--<property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
				<!--<property name="url" value="${taurus.jdbc.url}"/>-->
				<!--<property name="username" value="${taurus.jdbc.username}"/>-->
				<!--<property name="password" value="${taurus.jdbc.password}"/>-->
				<!--<property name="jmxEnabled" value="true"/>-->
				<!--<property name="testWhileIdle" value="true"/>-->
				<!--<property name="testOnBorrow" value="true"/>-->
				<!--<property name="testOnReturn" value="false"/>-->
				<!--<property name="validationInterval" value="30000"/>-->
				<!--<property name="validationQuery" value="SELECT 1"/>-->
				<!--<property name="timeBetweenEvictionRunsMillis" value="30000"/>-->
				<!--<property name="maxActive" value="100"/>-->
				<!--<property name="initialSize" value="10"/>-->
				<!--<property name="maxWait" value="10000"/>-->
				<!--<property name="minEvictableIdleTimeMillis" value="30000"/>-->
				<!--<property name="minIdle" value="10"/>-->
				<!--<property name="logAbandoned" value="false"/>-->
				<!--<property name="removeAbandoned" value="true"/>-->
				<!--<property name="removeAbandonedTimeout" value="60"/>-->
				<!--<property name="jdbcInterceptors" value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer"/>-->
			<!--</bean>-->
		<!--</property>-->
	<!--</bean>-->

	<!-- Datasource -->
	<bean id="dataSource" class="com.dianping.zebra.group.jdbc.GroupDataSource" init-method="init">
        <property name="jdbcRef" value="taurus" /> <!-- 唯一确定数据库的key -->
        <property name="routerType" value="fail-over" /><!-- 只走写库 -->
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="initialPoolSize" value="5" />
		<property name="maxIdleTime" value="1800" />
		<property name="idleConnectionTestPeriod" value="60" />
		<property name="acquireRetryAttempts" value="3" />
		<property name="acquireRetryDelay" value="300" />
		<property name="maxStatements" value="0"/>
		<property name="maxStatementsPerConnection" value="100"/>
		<property name="numHelperThreads" value="6"/>
		<property name="maxAdministrativeTaskTime" value="5"/>
		<property name="preferredTestQuery" value="SELECT 1"/>
	</bean>
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close"> <property name="driverClassName" value="com.mysql.jdbc.Driver" 
		/> <property name="url" value="jdbc:mysql://10.1.77.84:3306/TaurusCopy?autoReconnect=true" 
		/> <property name="username" value="root" /> <property name="password" value="123456" 
		/> </bean> -->

	<!-- SessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- <property name="configLocation" value="classpath:mybatis-config.xml" 
			/> -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Transaction -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- MyBatis Mappers -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dp.bigdata.taurus.generated.mapper" />
	</bean>

	<!-- Core Service -->
	<bean id="engine" class="com.dp.bigdata.taurus.core.Engine"
		init-method="load">
		<property name="progressMonitor" ref="statusMonitor" />
	</bean>
	<bean id="idFactory" class="com.dp.bigdata.taurus.core.DefaultIDFactory" />
	<bean id="statusMonitor" class="com.dp.bigdata.taurus.core.AttemptStatusMonitor" />
	<bean id="triggle.crontab" class="com.dp.bigdata.taurus.core.CrontabTriggle" />
	<bean id="triggle.dependency" class="com.dp.bigdata.taurus.core.DependencyTriggle" />
	<bean id="filter.isAllowMutilInstance" class="com.dp.bigdata.taurus.core.MultiInstanceFilter">
		<property name="next" ref="filter.maxConcurrency" />
	</bean>
	<bean id="filter.maxConcurrency" class="com.dp.bigdata.taurus.core.MaximumConcurrentTaskFilter" />
	<bean id="assignPolicy" class="com.dp.bigdata.taurus.core.RoundRobinTaskAssignPolicy"
		init-method="init" />
	<bean id="zookeeper"
		class="com.dp.bigdata.taurus.zookeeper.execute.helper.DefaultExecutorManager" />
	<bean id="lionDynamicConfig"
		class="com.dp.bigdata.taurus.lion.LionDynamicConfig" />
	<bean id="dynamicMaxCapacity"
		class="com.dp.bigdata.taurus.core.structure.DefaultDynamicBounded" />
	<bean id="maxCapacityList"
		class="com.dp.bigdata.taurus.core.structure.DefaultBoundedList" scope="prototype"/>
	<!--ba 认证filter-->
	<!--<bean id="mtConfigClient" class="com.sankuai.meituan.config.MtConfigClient" init-method="init" destroy-method="destroy">-->
		<!--<property name="nodeName" value="sample.hotel.mschedule"/> &lt;!&ndash; 配置所在路径 &ndash;&gt;-->
	<!--</bean>-->
	<bean id="apiAuthenticationFilter"
		  class="com.dp.bigdata.taurus.web.servlet.filter.ApiAuthenticationFilter">
		<!--<property name="mtConfigClient" ref="mtConfigClient"></property>-->
		<property name="lionConfig" ref="lionDynamicConfig"></property>
	</bean>
	<bean id="statusChecker" class="com.dp.bigdata.taurus.core.DefaultAttemptStatusCheck" />
	<bean id="agentMonitor" class="com.dp.bigdata.taurus.zookeeper.heartbeat.helper.PollingAgentMonitor"/>
	<bean id="alert" class="com.dp.bigdata.taurus.alert.TaurusAlert" init-method="load"/>

</beans>


	